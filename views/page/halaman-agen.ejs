<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Halaman Agen</title>
  <link rel="icon" href="/img/logo-icon.png" type="image/x-icon" />
  <link rel="stylesheet" href="/css/agen-style.css" />
  <link rel="stylesheet" href="/css/custom-style.css" />
  <script src="/script/admin-script.js"></script>
  <script src="/script/dimensi.js"></script>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.24.0/axios.min.js"></script>
  <style>
    #map {
      height: 100%;
      width: 100%;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      bottom: 10;
      width: 50%;
      height: 95vh;
      overflow: auto;
      background-color: rgb(0, 0, 0);
      background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
      background-color: #fefefe;
      align-items: center;
      margin: 5px;
      padding: 0;
      border: 5px solid rgb(134, 167, 137);
      width: 98%;
      height: 97%;
      position: relative;
      display: flex;
      flex-direction: column;
    }

    .close {
      color: #aaa;
      align-self: flex-end;
      font-size: 28px;
      font-weight: bold;
      margin-right: 10px;
      margin-top: 10px;
    }

    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }

    .button2 {
      padding: 10px 40px;
      border: none;
      background-color: rgb(134, 167, 137);
      color: rgb(235, 243, 232);
      cursor: pointer;
      font-size: 12pt;
      font-weight: bold;
      box-shadow: 0 6px 4px rgba(0, 0, 0, 0.2);
      text-decoration: none;
    }

    .button2:active {
      transform: translateY(4px);
      box-shadow: 0 3px 4px rgba(0, 0, 0, 0.1);
    }

    .alamat-button {
      display: inline;
      text-align: right;
    }

    .search-container {
      display: flex;
      width: 100%;
      justify-content: center;
      margin: 10px 0;
    }

    .search-container input[type="text"] {
      width: 70%;
      padding: 10px;
    }

    .search-container button {
      margin-left: 10px;
    }
  </style>
</head>

<body>
  <header>
    <div class="navbar-left">
      <img src="/img/logo2.png" alt="Logo Perusahaan" />
    </div>
    <div class="navbar-right">
      <span>
        <%= user.email %>
      </span>
      <%- (!user ? '<a href="/">Login</a>' : '<a href="/logout">Logout</a>' ) %>
    </div>
  </header>
  <div class="container">
    <div class="info">
      <h1>Penerimaan Paket</h1>
      <a class="btn-paket" href="/list-paket">List Paket</a>
    </div>
    <% if (typeof nomorResi !=='undefined' ) { %>
      <div class="info">
        <h2>Nomor Resi: <%= nomorResi %>
        </h2>
      </div>
      <% } %>
        <form id="packageForm" action="/save" method="post" class="form-container">
          <div class="left-form">
            <p>Masukkan data pengirim</p>
            <div class="form-flex">
              <label for="nama_pengirim">Nama Pengirim</label>
              <input type="text" id="nama_pengirim" name="nama_pengirim" placeholder="Nama Pengirim" required />
            </div>
            <div class="form-flex">
              <label for="no_hp_pengirim">No. HP</label>
              <input type="text" id="no_hp_pengirim" name="no_hp_pengirim" placeholder="Nomor Handphone Pengirim"
                required />
            </div>
            <div class="form-flex">
              <label for="deskripsi">Deskripsi</label>
              <input type="text" id="deskripsi" name="deskripsi" placeholder="Deskripsi paket yang akan dikirim" />
            </div>
            <div class="form-flex">
              <label for="berat">Berat (kg)</label>
              <input type="text" id="berat" name="berat" placeholder="Berat paket" />
            </div>
        <div class="form-flex">
          <label for="panjang">Panjang</label>
          <input type="text" id="panjang" name="panjang" placeholder="Panjang paket" oninput="hitungDimensi()" />
        </div>
        <div class="form-flex">
          <label for="lebar">Lebar</label>
          <input type="text" id="lebar" name="lebar" placeholder="Lebar paket" oninput="hitungDimensi()" />
        </div>
        <div class="form-flex">
          <label for="dimensi">Dimensi (cm)</label>
          <input type="text" id="dimensi" name="dimensi" placeholder="Dimensi paket" />
        </div>
        <div class="form-flex">
          <label for="jumlah_kiriman">Jumlah Kiriman</label>
          <input type="text" id="jumlah_kiriman" name="jumlah_kiriman"
            placeholder="Jumlah paket yang akan dikirim" />
        </div>
      </div>
      <div class="line-center"></div>
      <div class="right-form">
        <p>Masukkan data penerima</p>
        <div class="form-flex">
          <label for="nama_penerima">Nama Penerima</label>
          <input type="text" id="nama_penerima" name="nama_penerima" placeholder="Nama Penerima" required />
        </div>
        <div class="form-flex">
          <label for="no_hp_penerima">No. HP</label>
          <input type="text" id="no_hp_penerima" name="no_hp_penerima" placeholder="Nomor Handphone Penerima"
            required />
        </div>
        <div class="form-flex">
          <label for="alamat_tujuan">Alamat Tujuan</label>
          <textarea id="alamat_tujuan" name="alamat_tujuan"
            placeholder="Alamat Tujuan (Masukkan terlebih dahulu kota alamat yang akan dituju)" required></textarea>
        </div>
        <div class="alamat-button">
          <button class="button2" type="button" id="open-map">Buka Peta</button>
        </div>
        <p>Memilih zona pengiriman</p>
        <div class="opsi">
          <select id="kecamatan" name="kecamatan">
            <option value="">-- Pilih Kecamatan --</option>
          </select>
          <select id="kelurahan" name="kelurahan">
            <option value="">-- Pilih Kelurahan --</option>
          </select>
        </div>
        <input type="hidden" id="latitude" name="latitude" />
        <input type="hidden" id="longitude" name="longitude" />
        <button type="submit" class="button">+ Tambah</button>
      </div>
    </form>
</div>

<div id="addressModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <div class="search-container">
      <input type="text" id="search-address" placeholder="Cari Alamat" />
      <button class="button2" type="button" id="search-address-button">Cari</button>
    </div>
    <div id="map"></div>
    <button class="button2" type="button" id="confirm-map-address" style="margin: 10px;">Konfirmasi Alamat</button>
  </div>
</div>

  <script>
  // Mendapatkan elemen select
  const kecamatanSelect = document.getElementById("kecamatan");
  const kelurahanSelect = document.getElementById("kelurahan");

  // Mendapatkan data kecamatan dan kelurahan
  fetch('/data-kecamatan-kelurahan.json')
    .then(response => response.json())
    .then(data => {
      // Mengisi opsi kecamatan
      for (let kecamatan in data) {
        let option = document.createElement('option');
        option.value = kecamatan;
        option.textContent = kecamatan;
        kecamatanSelect.appendChild(option);
      }

      // Event listener ketika kecamatan dipilih
      kecamatanSelect.addEventListener('change', function () {
        // Menghapus opsi kelurahan sebelumnya
        kelurahanSelect.innerHTML = '<option value="">-- Pilih Kelurahan --</option>';

        // Mendapatkan kelurahan berdasarkan kecamatan yang dipilih
        let kelurahans = data[this.value];
        if (kelurahans) {
          kelurahans.forEach(function (kelurahan) {
            let option = document.createElement('option');
            option.value = kelurahan;
            option.textContent = kelurahan;
            kelurahanSelect.appendChild(option);
          });
        }
      });
    })
    .catch(error => console.error('Error fetching data:', error));

  let map;
  let marker;
  let selectedAddress = '';

  function initMap() {
    map = L.map("map").setView([3.5951646965262394, 98.6715265542528], 16);
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution: "Â© OpenStreetMap contributors",
    }).addTo(map);

    map.on("click", function (e) {
      if (marker) {
        map.removeLayer(marker);
      }
      marker = L.marker(e.latlng).addTo(map);

      axios
        .get(
          `https://nominatim.openstreetmap.org/reverse?format=json&lat=${e.latlng.lat}&lon=${e.latlng.lng}`
        )
        .then((response) => {
          selectedAddress = response.data.display_name;
          document.getElementById("latitude").value = e.latlng.lat;
          document.getElementById("longitude").value = e.latlng.lng;
        })
        .catch((error) => {
          console.error("Error fetching data:", error);
          alert("Error fetching data. Please try again.");
        });
    });
  }

  document.getElementById("open-map").addEventListener("click", () => {
    const modal = document.getElementById("addressModal");
    modal.style.display = "block";
    setTimeout(() => {
      map.invalidateSize();
    }, 300);
  });

  document.getElementById("confirm-map-address").addEventListener("click", () => {
    const modal = document.getElementById("addressModal");
    document.getElementById("alamat_tujuan").value = selectedAddress;
    modal.style.display = "none";
  });

  document.getElementById("search-address-button").addEventListener("click", () => {
    const searchAddress = document.getElementById("search-address").value;
    const medanBoundingBox = '98.5610,3.5182,98.7442,3.7064'; // Batas koordinat Medan (southwest_lng, southwest_lat, northeast_lng, northeast_lat)

    if (searchAddress) {
      axios
        .get(
          `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(
            searchAddress
          )}&bounded=1&viewbox=${medanBoundingBox}`
        )
        .then((response) => {
          if (response.data.length > 0) {
            const { lat, lon } = response.data[0];
            const latLng = [parseFloat(lat), parseFloat(lon)];
            map.setView(latLng, 13);
            if (marker) {
              map.removeLayer(marker);
            }
            marker = L.marker(latLng).addTo(map);
            selectedAddress = response.data[0].display_name;
            document.getElementById("latitude").value = lat;
            document.getElementById("longitude").value = lon;
          } else {
            alert("Alamat tidak ditemukan. Coba lagi.");
          }
        })
        .catch((error) => {
          console.error("Error fetching data:", error);
          alert("Error fetching data. Please try again.");
        });
    } else {
      alert("Masukkan alamat yang ingin dicari.");
    }
  });

  document.getElementsByClassName("close")[0].onclick = function () {
    document.getElementById("addressModal").style.display = "none";
  };

  window.onclick = function (event) {
    const modal = document.getElementById("addressModal");
    if (event.target == modal) {
      modal.style.display = "none";
    }
  };

  window.addEventListener("load", initMap);

  document.getElementById("packageForm").addEventListener("submit", function (event) {
    const requiredFields = [
      { id: "nama_pengirim", name: "Nama Pengirim" },
      { id: "no_hp_pengirim", name: "No. HP Pengirim" },
      { id: "nama_penerima", name: "Nama Penerima" },
      { id: "no_hp_penerima", name: "No. HP Penerima" },
      { id: "alamat_tujuan", name: "Alamat Tujuan" },
    ];

    for (let field of requiredFields) {
      if (!document.getElementById(field.id).value.trim()) {
        event.preventDefault();
        alert(`Harap isi kolom ${field.name} terlebih dahulu.`);
        document.getElementById(field.id).focus();
        break;
      }
    }
  });
  </script>
</body>

</html>
